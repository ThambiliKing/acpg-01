<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>View-Only Dashboard</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN"
      crossorigin="anonymous"
    />

    <script src="https://kit.fontawesome.com/7b71993087.js" crossorigin="anonymous"></script>

    <style>
      .clickable-row {
        cursor: pointer;
      }
    </style>
  </head>
  <body>
    <nav class="navbar" style="background-color: #e3f2fd;">
      <div class="container-fluid">
        <a class="navbar-brand">Student Management</a>
        <form class="d-flex" action="/logout" method="GET">
          <button class="btn btn-primary" type="submit">Logout</button>
        </form>
      </div>
    </nav><br>
    <center><h1>View-Only Dashboard</h1></center>
    <div class="alert-system">
    <div class="alert alert-warning d-flex align-items-center justify-content-center m-0" role="alert">
      <i class="fa-solid fa-triangle-exclamation"></i>&nbsp;&nbsp;Alpha Testing Environment!
    </div>
    </div>
    <br /><br />
    </div>

    <div class="container">
      <div class="row">
        <div class="col-md-4 offset-md-8">
          <input
            type="text"
            class="form-control"
            id="studentSearch"
            placeholder="Search by Name"
          />
        </div>
      </div>
    </div>
    <br />

    <div class="table-responsive">
      <table class="table table-bordered border-primary table-hover">
        <thead>
          <tr>
            <th scope="col">#</th>
            <th scope="col">Name</th>
            <th scope="col">Admission</th>
            <th scope="col">Class</th>
          </tr>
        </thead>
        <tbody class="table-group-divider" id="studentTableBody">
        </tbody>
      </table>
    </div>

    <nav aria-label="Page navigation">
      <ul class="pagination justify-content-center" id="pagination"></ul>
    </nav>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL"
      crossorigin="anonymous"
    ></script>

    <script>
      document.addEventListener("DOMContentLoaded", function () {
        fetch("/api/students", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
        })
          .then((response) => {
            if (response.status == 200) {
              return response.json();
            } else {
              throw new Error("Request failed with status " + response.status);
            }
          })
          .then((data) => {
            let paginationData = data.data.students;

            const itemsPerPage = 10;
            let currentPage = 1;
            let index = 1;

            function updateTable(filteredData) {
              const tableBody = document.getElementById("studentTableBody");
              tableBody.innerHTML = "";

              const startIndex = (currentPage - 1) * itemsPerPage;
              const endIndex = Math.min(
                startIndex + itemsPerPage,
                filteredData.length
              );

              for (let i = startIndex; i < endIndex; i++) {
                const student = filteredData[i];
                const row = `
              <tr class="clickable-row">
                <th scope="row">${i + 1}</th>
                <td>${student.name}</td>
                <td>${student.admission_no}</td>
                <td>${student.student_class}</td>
              </tr>`;
                tableBody.innerHTML += row;
              }

              const clickableRows = document.querySelectorAll(".clickable-row");
              let manipulateData = data;

              clickableRows.forEach(function (row, index) {
                row.addEventListener("click", function (event) {
                  if (!event.target.classList.contains("btn")) {
                    const studentData = filteredData[startIndex + index];
                    console.log(studentData);

                    const reasons = studentData ? studentData.reasons : [];

                    Swal.fire({
                      title: "Student Profile",
                      html:
                        `<input id="name" class="swal2-input" placeholder="Name" value="${
                          studentData ? studentData.name : ""
                        }" readOnly>` +
                        `<input id="admissionNumber" class="swal2-input" placeholder="Admission Number" value="${
                          studentData ? studentData.admission_no : ""
                        }" readOnly>` +
                        `<input id="studentClass" class="swal2-input" placeholder="Student Class" value="${
                          studentData ? studentData.student_class : ""
                        }" readOnly>` +
                        `<input id="year" class="swal2-input" placeholder="Year" value="${
                          studentData ? studentData.year : ""
                        }" readOnly><br><br>` +
                        `<label for="reasons">Reasons:</label><br>`+
                        `<div id="reasonsDiv">` +
                        `${reasons
                          .map(
                            (reason, i) => `
              <div class="reason">
                <input class="swal2-input" id="reasons" name="reasons" placeholder="Reason" value="${
                  reason.name
                }" readOnly>
              </div>`
                          )
                          .join("")}` +
                        `</div>`,
                      cancelButtonText: "Close",
                    });
                  }
                });
              });
            }

            function updatePagination(filteredData) {
              const pageCount = Math.ceil(filteredData.length / itemsPerPage);
              const pagination = document.getElementById("pagination");
              pagination.innerHTML = "";

              for (let i = 1; i <= pageCount; i++) {
                const li = document.createElement("li");
                li.classList.add("page-item");

                const link = document.createElement("a");
                link.classList.add("page-link");
                link.href = "#";
                link.textContent = i;

                if (i === currentPage) {
                  li.classList.add("active");
                }

                li.appendChild(link);
                pagination.appendChild(li);

                link.addEventListener("click", (event) => {
                  event.preventDefault();
                  currentPage = i;
                  updateTable(filteredData);
                  updatePagination(filteredData);
                });
              }
            }

            function filterStudentsByName(searchValue) {
              return paginationData.filter((student) =>
                student.name.toLowerCase().includes(searchValue.toLowerCase())
              );
            }

            const studentSearchInput = document.getElementById("studentSearch");
            studentSearchInput.addEventListener("input", () => {
              const searchValue = studentSearchInput.value.trim();
              const filteredData = searchValue
                ? filterStudentsByName(searchValue)
                : paginationData;

              currentPage = 1;
              updateTable(filteredData);
              updatePagination(filteredData);
            });

            updateTable(paginationData);
            updatePagination(paginationData);
          })
          .catch((error) => {
            console.error(error);
          });
      });
    </script>
  </body>
</html>
